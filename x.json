{
  "name": "pkgcloud",
  "description": "Pkgcloud components for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/pkgcloud.git"
  },
  "dependencies": {
    "pkgcloud": "0.x.x"
  },
  "nodes": [
    {
      "name": "amazon",
      "ns": "pkgcloud",
      "title": "Amazon Credentials",
      "description": "Amazon Credentials",
      "phrases": {
        "active": "Sending credentials to Amazon"
      },
      "ports": {
        "input": {
          "key": {
            "title": "Key",
            "type": "string",
            "required": true
          },
          "keyId": {
            "title": "Key ID",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"amazon\"\n"
    },
    {
      "name": "azure",
      "ns": "pkgcloud",
      "title": "Azure Credentials",
      "description": "See: [using compute](https://github.com/nodejitsu/pkgcloud/blob/master/docs/providers/azure.md#using-compute)",
      "phrases": {
        "active": "Creating credentials for azure"
      },
      "ports": {
        "input": {},
        "output": {}
      },
      "env": "server",
      "fn": "/* TODO: a bit ugly this, we don't really need a .js here\noutput = input\n"
    },
    {
      "name": "compute",
      "ns": "pkgcloud",
      "title": "Compute",
      "description": "The pkgcloud.compute service is designed to make it easy to provision and work with VMs.",
      "phrases": {
        "active": "Creating compute service"
      },
      "require": {
        "pkgcloud": "0.x.x"
      },
      "ports": {
        "input": {
          "credentials": {
            "title": "Credentials",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "client": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { client: pkgcloud.compute.createClient(input.credentials) }\n"
    },
    {
      "name": "createContainer",
      "ns": "pkgcloud",
      "title": "Create Storage Container",
      "description": "Create a Storage Container",
      "phrases": {
        "active": "Creating storage container"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "options": {
            "title": "Options",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "container": {
            "title": "Container",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'createContainer', input.options] \n"
    },
    {
      "name": "createImage",
      "ns": "pkgcloud",
      "title": "Create Image",
      "description": "Create Image",
      "phrases": {
        "active": "Creating image"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "options": {
            "title": "Options",
            "type": "object",
            "required": true,
            "name": {
              "title": "Image Name",
              "type": "string",
              "required": true
            },
            "server": {
              "title": "Server ID",
              "type": "string",
              "required": true
            }
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "image": {
            "title": "Image",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'createImage', input.options] \n"
    },
    {
      "name": "createServer",
      "ns": "pkgcloud",
      "title": "Create a Server",
      "description": "Creates a server",
      "phrases": {
        "active": "Creating server"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "options": {
            "title": "Options",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "server": {
            "title": "Server",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'createServer'] \n"
    },
    {
      "name": "database",
      "ns": "pkgcloud",
      "title": "Database",
      "description": "The pkgcloud.database service is designed to consistently work with a variety of Database-as-a-Service (DBaaS) providers.",
      "phrases": {
        "active": "Creating database service"
      },
      "require": {
        "pkgcloud": "0.x.x"
      },
      "ports": {
        "input": {
          "credentials": {
            "title": "Credentials",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "client": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { client: pkgcloud.database.createClient(input.credentials) }\n"
    },
    {
      "name": "destroyContainer",
      "ns": "pkgcloud",
      "title": "Destroy Storage Container",
      "description": "Destroy a Storage Container",
      "phrases": {
        "active": "Destroying container {{input.containerName}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "containerName": {
            "title": "Container name",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'destroyContainer', input.containerName] \n"
    },
    {
      "name": "destroyImage",
      "ns": "pkgcloud",
      "title": "Destroy Image",
      "description": "Destroy Image",
      "phrases": {
        "active": "Destroying image"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "image": {
            "title": "Image",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "success": {
            "title": "Success",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'destroyImage', input.image] \n"
    },
    {
      "name": "destroyServer",
      "ns": "pkgcloud",
      "title": "Destroy Server",
      "description": "Destroys a server",
      "phrases": {
        "active": "Destroying server"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "server": {
            "title": "Server",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "serverId": {
            "title": "Server ID",
            "type": "string"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'destroyServer', input.server] \n"
    },
    {
      "name": "dns",
      "ns": "pkgcloud",
      "title": "Dns",
      "description": "The pkgcloud.dns service is designed to make it easy to manage DNS zones and records on various infrastructure providers.",
      "phrases": {
        "active": "Creating DNS service"
      },
      "require": {
        "pkgcloud": "0.x.x"
      },
      "ports": {
        "input": {
          "credentials": {
            "title": "Credentials",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "client": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { client: pkgcloud.dns.createClient(input.credentials) }\n"
    },
    {
      "name": "download",
      "ns": "pkgcloud",
      "title": "Download file",
      "description": "Downloads a file from storage",
      "phrases": {
        "active": "Downloading {{input.options.remote}} from {{input.options.container}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "options": {
            "title": "Options",
            "type": "object",
            "container": {
              "title": "Container name",
              "type": "string",
              "required": true
            },
            "remote": {
              "title": "Remote filename",
              "type": "string",
              "required": true
            }
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { upload: client.upload(input.options) }\n"
    },
    {
      "name": "getContainer",
      "ns": "pkgcloud",
      "title": "Get Storage Container",
      "description": "Get a Storage Container",
      "phrases": {
        "active": "Getting storage container {{input.options.containerName}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "containerName": {
            "title": "Container name",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "container": {
            "title": "Container",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getContainer', input.containerName] \n"
    },
    {
      "name": "getContainers",
      "ns": "pkgcloud",
      "title": "Get Storage Containers",
      "description": "Get Storage Containers",
      "phrases": {
        "active": "Getting available storage containers"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "containers": {
            "title": "Containers",
            "type": "array"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getContainers'] \n"
    },
    {
      "name": "getFiles",
      "ns": "pkgcloud",
      "title": "Get Files",
      "description": "Get Files",
      "phrases": {
        "active": "Getting files from {{input.container}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "container": {
            "title": "Container",
            "type": "object",
            "required": true
          },
          "file": {
            "title": "File",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "server": {
            "title": "Server",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getFile', input.container, input.file] \n"
    },
    {
      "name": "getFiles",
      "ns": "pkgcloud",
      "title": "Get Files",
      "description": "Get Files",
      "phrases": {
        "active": "Getting files from {{input.container}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "container": {
            "title": "Container",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "files": {
            "title": "Files",
            "type": "array"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getFiles', input.container] \n"
    },
    {
      "name": "getFlavor",
      "ns": "pkgcloud",
      "title": "Get Flavor",
      "description": "Get Flavor",
      "phrases": {
        "active": "Getting flavor {{input.flavor}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "flavor": {
            "title": "Flavor",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "flavor": {
            "title": "Flavor",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getFlavor', input.flavor] \n"
    },
    {
      "name": "getLimits",
      "ns": "pkgcloud",
      "title": "API Limits",
      "description": "Get API limits",
      "phrases": {
        "active": "Getting API Limits"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "flavors": {
            "title": "Flavors",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getFlavors'] \n"
    },
    {
      "name": "getImage",
      "ns": "pkgcloud",
      "title": "Get Image",
      "description": "Get Image",
      "phrases": {
        "active": "Getting image {{input.imageID}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "image": {
            "title": "ImageID",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "image": {
            "title": "Image",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getImages'] \n"
    },
    {
      "name": "getImages",
      "ns": "pkgcloud",
      "title": "Get Images",
      "description": "Get Images",
      "phrases": {
        "active": "Getting images"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "images": {
            "title": "Images",
            "type": "array"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getImages'] \n"
    },
    {
      "name": "getLimits",
      "ns": "pkgcloud",
      "title": "API Limits",
      "description": "Get API limits",
      "phrases": {
        "active": "Getting API limits"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "limits": {
            "title": "Limits",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getLimits'] \n"
    },
    {
      "name": "getServer",
      "ns": "pkgcloud",
      "title": "Get Server",
      "description": "Get a server",
      "phrases": {
        "active": "Getting Server"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "server": {
            "title": "Server",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "serverId": {
            "title": "Server ID",
            "type": "string"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getServer', input.server] \n"
    },
    {
      "name": "getVersion",
      "ns": "pkgcloud",
      "title": "Server Version",
      "description": "Get the server version",
      "phrases": {
        "active": "Getting server version"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getVersion'] \n"
    },
    {
      "name": "getServers",
      "ns": "pkgcloud",
      "title": "Get Servers",
      "description": "Get servers for this compute",
      "phrases": {
        "active": "Getting servers for this compute"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "servers": {
            "title": "An array of servers",
            "type": "array"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'getServers'] \n"
    },
    {
      "name": "iriscouch",
      "ns": "pkgcloud",
      "title": "IrisCouch Credentials",
      "description": "In order to use IrisCOuch you will need to have created a valid account. ",
      "phrases": {
        "active": "Creating IrisCouch Credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title": "Username",
            "type": "string",
            "required": true
          },
          "password": {
            "title": "Password",
            "type": "password",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"iriscouch\"\n"
    },
    {
      "name": "joyent",
      "ns": "pkgcloud",
      "title": "Joyent Credentials",
      "description": "Joyent requires a username / password or key / keyId combo. The key / keyId should be registered in Joyent servers",
      "phrases": {
        "active": "Creating Joyent Credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title": "Username",
            "type": "string",
            "required": true
          },
          "password": {
            "title": "Password",
            "type": "password",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"joyent\"\n"
    },
    {
      "name": "mongohq",
      "ns": "pkgcloud",
      "title": "MongoHQ Credentials",
      "description": "MongoHQ Credentials",
      "phrases": {
        "active": "Creating MongoHQ Credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title": "Username",
            "type": "string",
            "required": true
          },
          "password": {
            "title": "Password",
            "type": "password",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"mongohq\"\n"
    },
    {
      "name": "mongolab",
      "ns": "pkgcloud",
      "title": "MongoLab Credentials",
      "description": "To create a database with MongoLab you will need first create an account and then use the created account as `owner` of the database.",
      "phrases": {
        "active": "Creating MongoLab Credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title": "Username",
            "type": "string",
            "required": true
          },
          "password": {
            "title": "Password",
            "type": "password",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"mongolab\"\n"
    },
    {
      "name": "rackspace",
      "ns": "pkgcloud",
      "title": "Rackspace Credentials",
      "description": "Rackspace Credentials",
      "phrases": {
        "active": "Creating Rackspace Credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title ": "Username",
            "type": "string",
            "required": true
          },
          "apiKey": {
            "title ": "API Key",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"rackspace\"\n"
    },
    {
      "name": "rebootServer",
      "ns": "pkgcloud",
      "title": "Reboot Server",
      "description": "Reboots a server",
      "phrases": {
        "active": "Rebooting server {{input.type}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "server": {
            "title": "Server",
            "type": "object",
            "required": true
          },
          "type": {
            "title": "Reboot Type",
            "enum": [
              "HARD",
              "SOFT"
            ]
          }
        },
        "output": {
          "result": {
            "title": "Result",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'rebootServer', input.server, { type: input.type }] \n"
    },
    {
      "name": "redistogo",
      "ns": "pkgcloud",
      "title": "RedisToGo Credentials",
      "description": "RedisToGo Credentials",
      "phrases": {
        "active": "Creating RedisToGo credentials"
      },
      "ports": {
        "input": {
          "username": {
            "title": "Username",
            "type": "string",
            "required": true
          },
          "password": {
            "title": "Password",
            "type": "password",
            "required": true
          }
        },
        "output": {
          "credentials": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = input\noutput.provider = \"redistogo\"\n"
    },
    {
      "name": "removeFile",
      "ns": "pkgcloud",
      "title": "Remove File",
      "description": "Remove a File",
      "phrases": {
        "active": "Removing file {{input.file}} from {{input.container}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "container": {
            "title": "Container",
            "type": "object",
            "required": true
          },
          "file": {
            "title": "File",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [client, 'removeFile', input.container, input.file] \n"
    },
    {
      "name": "storage",
      "ns": "pkgcloud",
      "title": "Storage",
      "description": "The pkgcloud.storage service is designed to make it easy to upload and download files to various infrastructure providers",
      "phrases": {
        "active": "Creating storage service"
      },
      "require": {
        "pkgcloud": "0.x.x"
      },
      "ports": {
        "input": {
          "credentials": {
            "title": "Credentials",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "client": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { client: pkgcloud.storage.createClient(input.credentials) }\n"
    },
    {
      "name": "upload",
      "ns": "pkgcloud",
      "title": "Upload file",
      "description": "Uploads a file to storage",
      "phrases": {
        "active": "Uploading {{input.options.remote}} to {{input.options.container}}"
      },
      "ports": {
        "input": {
          "client": {
            "title": "Client",
            "type": "object",
            "required": true
          },
          "options": {
            "title": "Options",
            "type": "object",
            "container": {
              "title": "Container name",
              "type": "string",
              "required": true
            },
            "remote": {
              "title": "Remote filename",
              "type": "string",
              "required": true
            }
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = { upload: client.upload(input.options) }\n"
    }
  ],
  "twigs": [],
  "env": "server"
}